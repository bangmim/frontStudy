function fetchData(id, callback){
    // id X (err)
    if (!id){
        const err=new Error("id is required")

        setTimeout(()=>{
            callback(err,null)
        },0)
        return
    }

    // id O
    const o={foo:"bar"}

    setTimeout(()=>{            (1) id=1
                                (2) callback(null, o) 전달
        callback(null,o)
    },1000)
}

// fetchData() 함수 호출
fetchData(1,(err,data)=>{      (1)id=1
                                (2)(err,data) => (null,o) : err =null, data=o
    
    if(err){                    (3) err=null 이므로 실행되지 않음.
        throw err;
    }
    
    // err 아닌 경우 data를 정의한 함수에 전달. 
    console.log("Data",data)    (3)data=o
})
=======================================================================================
function fetchData(id, callback){
    // id X (err)
    if (!id){                                   (1) id=null 이므로 if 조건문 실행
        const err=new Error("id is required")   

        setTimeout(()=>{
            callback(err,null)                  (1)callback(err,null) 전달
        },0)
        return
    }

    // id O
    const o={foo:"bar"}

    setTimeout(()=>{            
        callback(null,o)
    },1000)
}

// fetchData() 함수 호출
fetchData(null,(err,data)=>{      (1)id=null
                                (2)(err,data) => (err,null) : err =err, data=null

    if(err){                    (3) err=err 이므로 실행. (but 에러 처리 (try~catch)하지 않아서 error발생)
        throw err;
    }
    
    // err 아닌 경우 data를 정의한 함수에 전달. 
    console.log("Data",data)    (3)data=null
})
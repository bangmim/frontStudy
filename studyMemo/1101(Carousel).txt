(1).container에 item을 만든다
<div class="container">
    <div class="item">1</div>
    <div class="item">2</div>
    <div class="item">3</div>
</div>

(2).button에는 id와 onClick 함수를 적용한다.
<button id="next" onClick="f(1)">

(3).indicator 추가
<div class="indicator">
    <div class="dot bg-black"></div>
    <div class="dot"></div>
    <div class="dot"></div>
</div>

(4).style 적용
div로 감싼다.(container / 버튼1(prev)/ 버튼2(next))

<script>
    const next=document.getElementById("next")
    // class를 전체 선택할 때에는 ".class이름"으로 사용한다.
    //태그는 그냥 사용한다.
    const items=document.querySelectorAll(".item")

    // 함수 내부가 아닌 밖에서 선언해야한다.
    // 숫자는 const가 아닌 let으로 하는게 좋을 것 같다. (error난다)
    let index=0;

    function f(x){
        // onClick 함수를 통해 items의 index 만들기
        // index=index+x    
        // index=0+1     >> index=1+1
        index += x;

        console.log(index);

        //button을 누를 때 마다 item에 설정된 marginLeft가 적용된다.
        items[0].style.marginLeft=`-${index*200}px`;
    }

    //Button 컨트롤
    //button에 class hidden을 설정한다.

    // Button을 초기화한다.(버튼을 보이게한다.)
    // index 가 1일 때 prev가 생긴다.
    prev.classList.remove("hidden")
    next.classList.remove("hidden")

    if(index===0){      //첫번째 이미지일 때 prev 버튼을 사라지게 한다.
        prev.classList.add("hidden")
    }

    if(index===items.length-1){     //마지막 이미지일 때 next 버튼을 사라지게 한다.
        next.classList.add("hidden")
    }

    // # Indicator

    // dot를 초기화한다
    for (dot of dots){  //for (단수(사용자가 설정하는 name) of 복수(array))
        dot.classList.remove("bg-black")
    }

    //dots에서 index에 해당하는 아이템에만 불이 들어오게 한다.
    dots[index].classList.add("bg-black")
</script>


//태그 class에 width="", height="", > 공백만 있어도 0으로 적용된다.
아예 width/hegith 가 적혀있지 않아야 overflow가 가능하다